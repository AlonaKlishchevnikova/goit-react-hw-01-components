{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\goit-react-hw-01-components\\\\src\\\\components\\\\FriendList\\\\FriendList.jsx\";\nimport css from './friendList.module.css';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FriendList = _ref => {\n  let {\n    friends\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: css.friendList,\n    children: friends.map(friend => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: css.item,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: friend.isOnline ? css.statusOnline : css.statusOffline\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: css.avatar,\n        src: friend.avatar,\n        alt: \"User avatar\",\n        width: \"48\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: css.name,\n        children: friend.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 3\n      }, this)]\n    }, friend.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n_c = FriendList;\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    avatar: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    isOnline: PropTypes.bool.isRequired\n  }))\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"FriendList\");","map":{"version":3,"sources":["C:/Users/User/Documents/goit-react-hw-01-components/src/components/FriendList/FriendList.jsx"],"names":["css","PropTypes","FriendList","friends","friendList","map","friend","item","isOnline","statusOnline","statusOffline","avatar","name","id","propTypes","arrayOf","shape","number","isRequired","string","bool"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,yBAAhB;AAEA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,OAAO,MAAMC,UAAU,GAAG,QAAiB;AAAA,MAAhB;AAAEC,IAAAA;AAAF,GAAgB;AACvC,sBACI;AAAI,IAAA,SAAS,EAAEH,GAAG,CAACI,UAAnB;AAAA,cACID,OAAO,CAACE,GAAR,CAAYC,MAAM,iBAClB;AAAI,MAAA,SAAS,EAAEN,GAAG,CAACO,IAAnB;AAAA,8BACO;AAAM,QAAA,SAAS,EAAED,MAAM,CAACE,QAAP,GAAkBR,GAAG,CAACS,YAAtB,GAAqCT,GAAG,CAACU;AAA1D;AAAA;AAAA;AAAA;AAAA,cADP,eAGV;AAAK,QAAA,SAAS,EAAEV,GAAG,CAACW,MAApB;AAA4B,QAAA,GAAG,EAAEL,MAAM,CAACK,MAAxC;AAAgD,QAAA,GAAG,EAAC,aAApD;AAAkE,QAAA,KAAK,EAAC;AAAxE;AAAA;AAAA;AAAA;AAAA,cAHU,eAIV;AAAG,QAAA,SAAS,EAAEX,GAAG,CAACY,IAAlB;AAAA,kBAAyBN,MAAM,CAACM;AAAhC;AAAA;AAAA;AAAA;AAAA,cAJU;AAAA,OAA8BN,MAAM,CAACO,EAArC;AAAA;AAAA;AAAA;AAAA,YADA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CAhBM;KAAMX,U;AAiBbA,UAAU,CAACY,SAAX,GAAuB;AACrBX,EAAAA,OAAO,EAAEF,SAAS,CAACc,OAAV,CACPd,SAAS,CAACe,KAAV,CAAgB;AACdH,IAAAA,EAAE,EAAEZ,SAAS,CAACgB,MAAV,CAAiBC,UADP;AAEdP,IAAAA,MAAM,EAAEV,SAAS,CAACkB,MAAV,CAAiBD,UAFX;AAGdN,IAAAA,IAAI,EAAEX,SAAS,CAACkB,MAAV,CAAiBD,UAHT;AAIdV,IAAAA,QAAQ,EAAEP,SAAS,CAACmB,IAAV,CAAeF;AAJX,GAAhB,CADO;AADY,CAAvB","sourcesContent":["import css from './friendList.module.css';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const FriendList = ({ friends }) => {\r\n    return (\r\n        <ul className={css.friendList}>\r\n           {friends.map(friend=>(\r\n            <li className={css.item} key={friend.id}>\r\n                   <span className={friend.isOnline ? css.statusOnline : css.statusOffline}></span>\r\n                    \r\n  <img className={css.avatar} src={friend.avatar} alt=\"User avatar\" width=\"48\" />\r\n  <p className={css.name}>{friend.name}</p>\r\n</li>\r\n          ) ) }\r\n\r\n            \r\n\r\n</ul>\r\n    )\r\n}\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      avatar: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      isOnline: PropTypes.bool.isRequired,\r\n    }),\r\n  ),\r\n};\r\n"]},"metadata":{},"sourceType":"module"}